name: GithubActionsRelease

############################################################################################################
# All of thes jobs runs commands only on a tag push in the Material-Blazor\Material.Blazor repository
# The publishing actions in forked repositories were handled by the WIP workflow
# An 'ExitWorkflow' action is sorely needed
############################################################################################################
# NUGET_API_KEY is valid through 9/11/2021
############################################################################################################

on:
  push:
    tags:
      - '*' # Push events to matching *, i.e. 1.0, 20.15.10

env:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  output: ${{github.workspace}}\output
  project: 'GoogleAnalytics.Blazor/GoogleAnalytics.Blazor.csproj'

jobs:

############################################################################################################
# These jobs are used to gate actions. By creating these jobs we don't need to proliferate the repo checks
############################################################################################################
  is-on-fork:
    name: Running on a fork?
    runs-on: ubuntu-latest
    if: github.repository != 'Material-Blazor/GoogleAnalytics.Blazor'
    steps:
    - name: Nothing to see here
      run: echo ""

  is-on-ga-blazor:
    name: Running on Material-Blazor/GoogleAnalytics.Blazor?
    runs-on: ubuntu-latest
    if: github.repository == 'Material-Blazor/GoogleAnalytics.Blazor'
    steps:
    - name: Nothing to see here
      run: echo ""

############################################################################################################
# Store the version information
############################################################################################################
  version:
    name: Set version identifier
    runs-on: ubuntu-latest

    steps:
    - id: get
      run: |
        echo "::set-output name=identifier::${GITHUB_REF/refs\/tags\//}"
    - id: show
      run: |
        echo "${{ steps.get.outputs.identifier }}"
    outputs:
      identifier: ${{ steps.get.outputs.identifier }}
############################################################################################################
# Store the branch information
############################################################################################################
  branch:
    name: Set branch identifier
    runs-on: ubuntu-latest
    steps:
    - id: get
      run: |
        echo "::set-output name=identifier::${GITHUB_REF/refs\/heads\//}"
    - id: show
      run: |
        echo "${{ steps.get.outputs.identifier }}"
    outputs:
      identifier: ${{ steps.get.outputs.identifier }}

############################################################################################################
# Build GA.B
############################################################################################################
  build-gab:
    needs: [version, is-on-ga-blazor]
    name: Build GoogleAnalytics.Blazor
    runs-on: windows-latest

    steps:
    - name: Checkout repository under $GITHUB_WORKSPACE so the job can access it 🛎️
      uses: actions/checkout@v2
      with:
        persist-credentials: false

    - name: Use prelease dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
        include-prerelease: true

    - name: Build and Publish 🔧
      run: dotnet publish ${{env.project}} --configuration ${{env.buildConfiguration}} --output ${{env.output}} -p:Version=${{needs.version.outputs.identifier}} -p:BlazorEnableCompression=false      

    - name: Build GoogleAnalytics.Blazor 🔧
      run: dotnet build ${{env.project}} --configuration ${{env.buildConfiguration}} -p:Version=${{needs.version.outputs.identifier}}

    - name: Generate the NuGet package 🔧
      run: dotnet pack ${{env.projectMB}} --configuration ${{env.buildConfiguration}} --output ${{env.output}} -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg -p:Version=${{needs.version.outputs.identifier}}

    - name: Display package output Ꙫ
      run: dir ${{env.output}}

#    - name: Upload Package 🚀
#      run: dotnet nuget push ${{env.output}}\*.nupkg -k ${{secrets.NUGET_API_KEY}} -s https://api.nuget.org/v3/index.json


############################################################################################################
# Create release
############################################################################################################
  create-release:
    name: Create release
    needs: [ build-and-deploy-package, build-gab, branch, version, is-on-ga-blazor]

    runs-on: ubuntu-latest

    steps:
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{needs.version.outputs.identifier}}
        release_name: Release ${{needs.version.outputs.identifier}}
        draft: false
        prerelease: false
